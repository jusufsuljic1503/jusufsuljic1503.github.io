{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home2/home2.component.css","webpack:///./src/app/home2/home2.component.html","webpack:///./src/app/home2/home2.component.ts","webpack:///./src/app/movie/movie.component.css","webpack:///./src/app/movie/movie.component.html","webpack:///./src/app/movie/movie.component.ts","webpack:///./src/app/shows/shows.component.css","webpack:///./src/app/shows/shows.component.html","webpack:///./src/app/shows/shows.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/services/movie.service.ts","webpack:///./src/services/shows.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACc;AACC;AAEO;AAEN;AACH;AACG;AAEV;AAEW;AACA;AACD;AAGzD,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC3C,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAC,OAAO,EAAE,SAAS,EAAC,MAAM,EAAC;IAChD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,sEAAc,EAAE;IAG3C,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,qEAAc,EAAE;IACrD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,qEAAc,EAAE;CAEpD,CAAC;AAuBF;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;gBACb,qEAAc;gBACd,qEAAc;gBACd,sEAAc;aAGf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBAEX,kEAAmB;gBACnB,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;aAChC;YACD,SAAS,EAAE,CAAC,uEAAY,EAAC,wEAAY,CAAC;YACtC,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AClDtB,4BAA4B,+BAA+B,KAAK,mBAAmB,+BAA+B,C;;;;;;;;;;;ACAlH,2lCAA2lC,0JAA0J,iDAAiD,+JAA+J,qBAAqB,WAAW,wBAAwB,oEAAoE,wBAAwB,2CAA2C,YAAY,kYAAkY,0JAA0J,4CAA4C,mJAAmJ,uBAAuB,WAAW,0BAA0B,oEAAoE,0BAA0B,2CAA2C,cAAc,+J;;;;;;;;;;;;;;;;;;;;;;;;;ACAv/E;AACb;AAa1D;IAgBE,uBAAmB,YAA0B;QAA7C,iBAUC;QAVkB,iBAAY,GAAZ,YAAY,CAAc;QAL7C,aAAQ,GAAa,EAAE,CAAC;QAQtB,qBAAqB;QACrB,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,cAAI;YACjD,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QAExC,CAAC,CAAC,CAAC;IAGL,CAAC;IAGD,+BAA+B;IAC/B,oCAAY,GAAZ;QAAA,iBASC;QARC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACtD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YAKrC,mCAAmC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAQ,GAAR;IAIF,CAAC;IA7CY,aAAa;QAPzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAmBiC,uEAAY;OAhBlC,aAAa,CA6CxB;IAAD,oBAAC;CAAA;AA7CwB;;;;;;;;;;;;ACd1B,4BAA4B,2BAA2B,KAAK,eAAe,mCAAmC,C;;;;;;;;;;;ACA9G,omCAAomC,0JAA0J,kDAAkD,mJAAmJ,oBAAoB,WAAW,uBAAuB,oEAAoE,uBAAuB,0CAA0C,WAAW,4WAA4W,0JAA0J,8CAA8C,mJAAmJ,uBAAuB,WAAW,0BAA0B,oEAAoE,0BAA0B,0CAA0C,cAAc,kJ;;;;;;;;;;;;;;;;;;;;;;;;;ACAh/E;AAEQ;AAO1D;IAME,wBAAmB,YAA0B;QAA7C,iBASC;QATkB,iBAAY,GAAZ,YAAY,CAAc;QAG3C,oBAAoB;QACpB,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,cAAI;YAChD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YACrC,mCAAmC;QACrC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,8BAA8B;IAC9B,oCAAW,GAAX;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YACrC,mCAAmC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IA1BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAOiC,uEAAY;OANlC,cAAc,CA4B1B;IAAD,qBAAC;CAAA;AA5B0B;;;;;;;;;;;;ACT3B,mB;;;;;;;;;;;ACAA,gOAAgO,eAAe,+LAA+L,qBAAqB,+BAA+B,eAAe,sNAAsN,0CAA0C,8HAA8H,iBAAiB,8HAA8H,kBAAkB,8HAA8H,iBAAiB,mIAAmI,gBAAgB,2PAA2P,cAAc,6OAA6O,yEAAyE,YAAY,gMAAgM,kBAAkB,0KAA0K,iBAAiB,0e;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxtE;AACiB;AAET;AAO1D;IAEE,wBAAoB,MAAsB,EAAU,YAA0B;QAA1D,WAAM,GAAN,MAAM,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnF,iCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAM;YAClC,IAAM,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC3C,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,qBAAqB;YACvB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAZU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAG4B,8DAAc,EAAwB,uEAAY;OAFnE,cAAc,CAc1B;IAAD,qBAAC;CAAA;AAd0B;;;;;;;;;;;;ACV3B,mB;;;;;;;;;;;ACAA,+NAA+N,sBAAsB,+LAA+L,oBAAoB,+BAA+B,cAAc,sNAAsN,2CAA2C,iJAAiJ,iBAAiB,8HAA8H,2BAA2B,oRAAoR,cAAc,kPAAkP,2EAA2E,YAAY,oLAAoL,iBAAiB,6KAA6K,gBAAgB,yT;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5+D;AACiB;AAET;AAO1D;IAEE,wBAAoB,MAAsB,EAAU,YAA0B;QAA1D,WAAM,GAAN,MAAM,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnF,iCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAM;YAClC,IAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC5B,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC1C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,qBAAqB;YACvB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAZU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAG4B,8DAAc,EAAwB,uEAAY;OAFnE,cAAc,CAc1B;IAAD,qBAAC;CAAA;AAd0B;;;;;;;;;;;;;ACV3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACXO;AACK;AAKhD;IAWE,sBAAmB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAR5B,cAAS,GAAG,8BAA8B,CAAC;QAC3C,YAAO,GAAE,kCAAkC,CAAC;IAOZ,CAAC;IAEzC,kCAAW,GAAX,UAAY,KAAa;QACvB,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;QAGxB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,eAAe,GAAG,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,GAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACtH,CAAC;IAEF;;;;QAII;IAEH,uCAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,gBAAgB,GAAG,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;IACxF,CAAC;IAED,+BAAQ,GAAR,UAAS,EAAU;QAEjB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,GAAG,EAAE,GAAG,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,4BAA4B,CAAC,CAAC;IACrH,CAAC;IAjCU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAY0B,+DAAU;OAXzB,YAAY,CAkCxB;IAAD,mBAAC;CAAA;AAlCwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACNkB;AACK;AAKhD;IASE,sBAAmB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAN5B,aAAQ,GAAG,8BAA8B,CAAC;QAC1C,YAAO,GAAE,kCAAkC,CAAC;IAKZ,CAAC;IAEzC,iCAAU,GAAV,UAAW,IAAY;QACrB,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,eAAe,GAAG,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,GAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACpH,CAAC;IAED,qCAAc,GAAd,UAAe,EAAS;QAEtB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAE,EAAE,GAAE,SAAS,GAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1F,CAAC;IAGD,sCAAe,GAAf;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,aAAa,GAAG,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;IACpF,CAAC;IAED,8BAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,EAAE,GAAG,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,4BAA4B,CAAC,CAAC;IACjH,CAAC;IA5BU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAU0B,+DAAU;OATzB,YAAY,CA6BxB;IAAD,mBAAC;CAAA;AA7BwB","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'movieapp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\nimport {FormControl} from '@angular/forms'\nimport { MovieComponent } from './movie/movie.component';\nimport { HomeComponent } from './home/home.component';\nimport { ShowsComponent } from './shows/shows.component';\n\nimport { AppComponent } from './app.component';\n\nimport { MovieService } from 'src/services/movie.service';\nimport { ShowsService } from 'src/services/shows.service';\nimport { Home2Component } from './home2/home2.component';\n\n\nconst appRoutes: Routes = [\n  { path: 'movie', component: HomeComponent },\n  {path: '', redirectTo:'movie', pathMatch:'full'},\n  { path: 'show', component: Home2Component },\n\n\n  { path: 'movie/:movieID', component: MovieComponent },\n  { path: 'show/:showID', component: ShowsComponent }\n  \n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MovieComponent,\n    ShowsComponent,\n    Home2Component,\n    \n   \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    \n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [MovieService,ShowsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".centered{\\r\\n\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.btn-group{\\r\\n    margin-left: 450px\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n<br>\\n\\n<div class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\">\\n  <label class=\\\"btn btn-secondary active\\\">\\n    <a routerLink='' type=\\\"radio\\\" checked> Movies</a>\\n  </label>\\n  <label class=\\\"btn btn-secondary\\\">\\n    <a routerLink='/show/' type=\\\"radio\\\">Shows</a>\\n  </label>\\n</div>\\n\\n <br>\\n\\n\\n  \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h1>Search Movies</h1>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <form>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-9\\\">\\n            <input type=\\\"search\\\" class=\\\"form-control\\\" placeholder=\\\"Search Movies\\\" \\n            name=\\\"movie\\\"\\n              [(ngModel)]=\\\"movie\\\" name=\\\"movie\\\"\\n               >\\n          </div>\\n          <div class=\\\"col-3\\\">\\n            <button class=\\\"btn-block btn-info form-control\\\" (click)=\\\"searchMovies()\\\">Search</button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    \\n    <div  class=\\\"col-sm-4\\\" *ngFor=\\\"let movie of search_result; let i = index\\\">\\n      <div *ngIf=\\\"i < 20\\\">\\n        <div class=\\\"card mt-3 mb-3\\\">\\n          <div class=\\\"card-header text-center\\\">\\n            {{ movie.release_date | date:'mediumDate':'yyyy' }}\\n          </div>\\n          \\n          <div class=\\\"card-body\\\">\\n            <img class=\\\"card-img-top img-fluid\\\" src=\\\"https://image.tmdb.org/t/p/w500/{{ movie.poster_path }}\\\" alt=\\\"{{ movie.original_title }}\\\" style=\\\"height: 460px\\\">\\n            <p class=\\\"text-center\\\">{{ movie.original_title }}</p>\\n            <a routerLink=\\\"/movie/{{ movie.id }}\\\" href=\\\"#\\\" class=\\\"btn btn-info\\\" role=\\\"button\\\">Movie Details</a>\\n          </div>\\n        </div>\\n      </div>\\n    \\n  </div>\\n  </div>\\n\\n  <hr>\\n  \\n\\n  <hr>\\n\\n  <div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h1>Popular Movies</h1>\\n    </div>\\n    </div>\\n\\n   <div class=\\\"row\\\">\\n    <div  class=\\\"col-sm-4\\\" *ngFor=\\\"let popular of popular_movies; let i = index\\\">\\n      <div *ngIf=\\\"i < 10\\\">\\n        <div class=\\\"card mt-3 mb-3\\\">\\n          <div class=\\\"card-header text-center\\\">\\n            {{ popular.release_date | date:'mediumDate' }}\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <img class=\\\"card-img-top img-fluid\\\" src=\\\"https://image.tmdb.org/t/p/w500/{{ popular.poster_path }}\\\" alt=\\\"{{ popular.original_title }}\\\" style=\\\"height: 460px\\\">\\n            <p class=\\\"text-center\\\">{{ popular.original_title }}</p>\\n            <a routerLink=\\\"/movie/{{ popular.id }}\\\" href=\\\"#\\\" class=\\\"btn btn-block btn-info\\\">Movie Details</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n   </div>\\n\\n   </div>\\n\\n</div>\"","import { Component, OnInit, PipeTransform, Pipe } from '@angular/core';\nimport { MovieService } from 'src/services/movie.service';\nimport { ShowsService } from 'src/services/shows.service';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\nimport {FormControl} from '@angular/forms'\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\n\nexport class HomeComponent implements OnInit{\n  \n\n  popular_movies: any;\n  upcoming_movies: any;\n  search_result: any;\n  movie: any;\n  id:number;\n  movie_trailers:any; \n\n  searchField: FormControl; \n  searches: string[] = []; \n\n\n  \n\n  constructor(public movieService: MovieService) {\n   \n\n    // get popular movies\n    this.movieService.getPopularMovies().subscribe(data => {\n      this.popular_movies = data['results'];\n      \n    });\n\n   \n  }\n\n\n  // get search results of movies\n  searchMovies() {\n    this.movieService.searchMovie(this.movie).subscribe(data => {\n      this.search_result = data['results'];\n      \n    \n      \n      \n      // console.log(this.search_result);\n    });\n  }\n\n  ngOnInit() {\n\n  \n\n}}","module.exports = \".centered{\\r\\n    text-align: center;\\r\\n}\\r\\n.btn-group{\\r\\n    margin-left: 450px\\r\\n\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n<br>\\n    \\n    <div class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\">\\n        <label class=\\\"btn btn-secondary\\\">\\n          <a routerLink='' type=\\\"radio\\\"  > Movies</a>\\n        </label>\\n        <label class=\\\"btn btn-secondary active\\\">\\n          <a routerLink='/show/' type=\\\"radio\\\" checked >Shows</a>\\n        </label>\\n    </div>\\n        \\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h1>Search Shows</h1>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <form>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-9\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search Shows\\\"\\n              name=\\\"show\\\"\\n              [(ngModel)]=\\\"show\\\">\\n          </div>\\n          <div class=\\\"col-3\\\">\\n            <button class=\\\"btn-block btn-danger form-control\\\" (click)=\\\"searchShows()\\\">Search</button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div  class=\\\"col-sm-4\\\" *ngFor=\\\"let show of search_result; let i = index\\\">\\n      <div *ngIf=\\\"i < 20\\\">\\n        <div class=\\\"card mt-3 mb-3\\\">\\n          <div class=\\\"card-header text-center\\\">\\n            {{ show.first_air_date | date:'mediumDate':'yyyy' }}\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <img class=\\\"card-img-top img-fluid\\\" src=\\\"https://image.tmdb.org/t/p/w500/{{ show.poster_path }}\\\" alt=\\\"{{ show.original_title }}\\\" style=\\\"height: 460px\\\">\\n            <p class=\\\"text-center\\\">{{ show.original_title }}</p>\\n            <a routerLink=\\\"/show/{{ show.id }}\\\" href=\\\"#\\\" class=\\\"btn btn-danger\\\" role=\\\"button\\\">Show Details</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <hr>\\n \\n  <hr>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h1>Popular Shows</h1>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div  class=\\\"col-sm-4\\\" *ngFor=\\\"let popular of popular_shows; let i = index\\\">\\n      <div *ngIf=\\\"i < 10\\\">\\n        <div class=\\\"card mt-3 mb-3\\\">\\n          <div class=\\\"card-header text-center\\\">\\n            {{ popular.first_air_date | date:'mediumDate' }}\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <img class=\\\"card-img-top img-fluid\\\" src=\\\"https://image.tmdb.org/t/p/w500/{{ popular.poster_path }}\\\" alt=\\\"{{ popular.original_title }}\\\" style=\\\"height: 460px\\\">\\n            <p class=\\\"text-center\\\">{{ popular.original_title }}</p>\\n            <a routerLink=\\\"/show/{{ popular.id }}\\\" href=\\\"#\\\" class=\\\"btn btn-block btn-danger\\\">Show Details</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MovieService } from 'src/services/movie.service';\nimport { ShowsService } from 'src/services/shows.service';\n\n@Component({\n  selector: 'app-home2',\n  templateUrl: './home2.component.html',\n  styleUrls: ['./home2.component.css']\n})\nexport class Home2Component implements OnInit {\n  popular_shows: any;\n  upcoming_shows: any;\n  search_result: any;\n  show: any;\n\n  constructor(public showsService: ShowsService) {\n   \n\n    // get popular shows\n    this.showsService.getPopularShows().subscribe(data => {\n      this.popular_shows = data['results'];\n      // console.log(this.popular_shows);\n    });\n\n  }\n\n  // get search results of shows\n  searchShows() {\n    this.showsService.searchShow(this.show).subscribe(data => {\n      this.search_result = data['results'];\n      // console.log(this.search_result);\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div *ngIf=\\\"movie\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <div class=\\\"card mt-5 mb-5\\\">\\n          <div class=\\\"card-header\\\"> \\n            {{ movie.title }}\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-5\\\">\\n                <img src=\\\"https://image.tmdb.org/t/p/w500/{{ movie.poster_path }}\\\" class=\\\"img-fluid\\\" alt=\\\"{{ movie.title }}\\\">\\n              </div>\\n              <div class=\\\"col-sm-7\\\">\\n                <ul class=\\\"list-group\\\">\\n                  <li class=\\\"list-group-item\\\">\\n                    <strong>Release Date: </strong> {{ movie.release_date | date:'dd-MM-yyyy' }}\\n                  </li>\\n                  <li class=\\\"list-group-item\\\">\\n                    <strong>Tagline: </strong> {{ movie.tagline }}\\n                  </li>\\n                  <li class=\\\"list-group-item\\\">\\n                    <strong>Summary: </strong> {{ movie.overview }}\\n                  </li>\\n                  <li class=\\\"list-group-item\\\">\\n                    <strong>Runtime: </strong> {{ movie.runtime }} min\\n                  </li>\\n                  <li class=\\\"list-group-item\\\">\\n                      <strong>Budget: </strong> {{ movie.budget }} $\\n                    </li>\\n                  <li class=\\\"list-group-item\\\">\\n                    <strong>Genre: </strong>\\n                    <span *ngFor=\\\"let genre of movie.genres\\\" class=\\\"badge badge-primary mr-2\\\">\\n                      {{ genre.name }}\\n                    </span>\\n                  </li>\\n\\n                  <li class=\\\"list-group-item\\\">\\n                    <strong>Videos and Trailers: </strong>\\n                    <div *ngFor=\\\"let result of movie.videos.results;\\\">\\n                        <a href=\\\"https://www.youtube.com/watch?v={{result.key}}\\\">Link</a>\\n                      \\n                    </div>\\n                  </li>\\n\\n                \\n                  <li class=\\\"list-group-item\\\">\\n                    <a href=\\\"{{ movie.homepage }}\\\" class=\\\"btn btn-info\\\"  target=\\\"_blank\\\">\\n                      Movie Homepage\\n                    </a>\\n                    <a href=\\\"https://www.imdb.com/title/{{ movie.imdb_id }}\\\" target=\\\"_blank\\\" class=\\\"btn btn-info\\\">\\n                      IMDB Link \\n                    \\n                    </a>\\n\\n                    \\n                    \\n                    \\n                      \\n\\n  \\n            \\n                    \\n\\n                  \\n                  \\n\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div><!-- /.card -->\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { MovieService } from 'src/services/movie.service';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n  movie: any;\n  constructor(private router: ActivatedRoute, private movieService: MovieService) { }\n\n  ngOnInit() {\n    this.router.params.subscribe((params) => {\n      const id = params['movieID'];\n      this.movieService.getMovie(id).subscribe(data => {\n        this.movie = data;\n        // console.log(data);\n      });\n    });\n  }\n\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div *ngIf=\\\"show\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <div class=\\\"card mt-5 mb-5\\\">\\n          <div class=\\\"card-header\\\"> \\n            {{ show.original_name }}\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-5\\\">\\n                <img src=\\\"https://image.tmdb.org/t/p/w500/{{ show.poster_path }}\\\" class=\\\"img-fluid\\\" alt=\\\"{{ show.title }}\\\">\\n              </div>\\n              <div class=\\\"col-sm-7\\\">\\n                <ul class=\\\"list-group\\\">\\n                  <li class=\\\"list-group-item\\\">\\n                    <strong>Release Date: </strong> {{ show.first_air_date | date:'dd-MM-yyyy' }}\\n                  </li>\\n                 \\n                  <li class=\\\"list-group-item\\\">\\n                    <strong>Summary: </strong> {{ show.overview }}\\n                  </li>\\n                  <li class=\\\"list-group-item\\\">\\n                    <strong>Runtime: </strong> {{ show.number_of_episodes }}  episodes\\n                  </li>\\n                  \\n                  <li class=\\\"list-group-item\\\">\\n                    <strong>Genre: </strong>\\n                    <span *ngFor=\\\"let genre of show.genres\\\" class=\\\"badge badge-primary mr-2\\\">\\n                      {{ genre.name }}\\n                    </span>\\n                  </li>\\n\\n\\n                  <li class=\\\"list-group-item\\\">\\n                      <strong>Videos and Trailers: </strong>\\n                      <div *ngFor=\\\"let result of show.videos.results;\\\">\\n                          <a href=\\\"https://www.youtube.com/watch?v={{result.key}}\\\">Link</a>\\n                        \\n                      </div>\\n                    </li>\\n\\n                  <li class=\\\"list-group-item\\\">\\n                    <a href=\\\"{{ show.homepage }}\\\" class=\\\"btn btn-danger\\\" target=\\\"_blank\\\">\\n                      TV Show Homepage\\n                    </a>\\n                    <a href=\\\"https://www.imdb.com/title/{{ show.imdb_id }}\\\" target=\\\"_blank\\\" class=\\\"btn btn-danger\\\">\\n                      IMDB Link\\n                    </a>\\n                    \\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div><!-- /.card -->\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { ShowsService } from 'src/services/shows.service';\n\n@Component({\n  selector: 'app-shows',\n  templateUrl: './shows.component.html',\n  styleUrls: ['./shows.component.css']\n})\nexport class ShowsComponent implements OnInit {\n  show: any;\n  constructor(private router: ActivatedRoute, private showsService: ShowsService) { }\n\n  ngOnInit() {\n    this.router.params.subscribe((params) => {\n      const id = params['showID'];\n      this.showsService.getShow(id).subscribe(data => {\n        this.show = data;\n        // console.log(data);\n      });\n    });\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n\n  private movie_url = 'https://api.themoviedb.org/3';\n  private api_key= '1dc82c9bec6ae46050cbe7ccf9368fe4';\n  private movie_string: string;\n \n  \n  private id: number;\n\n\n  constructor(public _http: HttpClient) { }\n\n  searchMovie(movie: string){\n    this.movie_string=movie;\n    \n    \n    return this._http.get(this.movie_url + '/search/movie' + '?api_key=' + this.api_key + '&query='+ this.movie_string);\n  }\n\n /*getMovieTrailer(id:number){\n\n    return this._http.get(this.movie_url + '/movie/' +id+'/videos'+'?api_key=' + this.api_key);\n   \n  }*/\n  \n  getPopularMovies() {\n    return this._http.get(this.movie_url + '/movie/popular' + '?api_key=' + this.api_key);\n  }\n\n  getMovie(id: number) {\n    \n    return this._http.get(this.movie_url + '/movie/' + id + '?api_key=' + this.api_key + '&append_to_response=videos');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowsService {\n\n\n  private show_url = 'https://api.themoviedb.org/3';\n  private api_key= '1dc82c9bec6ae46050cbe7ccf9368fe4';\n  private show_string: string;\n  private id: number;\n\n\n  constructor(public _http: HttpClient) { }\n\n  searchShow(show: string){\n    this.show_string=show;\n    return this._http.get(this.show_url + '/search/movie' + '?api_key=' + this.api_key + '&query='+ this.show_string);\n  }\n\n  getShowTrailer(id:number){\n\n    return this._http.get(this.show_url + '/tv/' +id +'/videos'+'?api_key=' + this.api_key);\n  }\n\n  \n  getPopularShows() {\n    return this._http.get(this.show_url + '/tv/popular' + '?api_key=' + this.api_key);\n  }\n\n  getShow(id: number) {\n    return this._http.get(this.show_url + '/tv/' + id + '?api_key=' + this.api_key + '&append_to_response=videos');\n  }\n}\n"],"sourceRoot":""}